--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v87=0;local v88;while true do if (v87==1) then return v88;end if (v87==0) then v88=v5(v81,v19);v19=nil;v87=1;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%(((880 -(282 + 595)) -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((2569 -(1523 + 114)) -(857 + 74)))) ;return v82-(v82%(569 -(367 + 201))) ;else local v83=(929 -(214 + 713))^(v32-1) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (0 + 0 + 0) ;end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==1) then return v35;end if (v34==(1065 -(68 + 997))) then v35=v1(v16,v18,v18);v18=v18 + (1271 -(226 + 1044)) ;v34=4 -3 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 + 0 ;return (v37 * 256) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;return (v41 * ((73474621 -33452058) -23245347)) + (v40 * 65536) + (v39 * (472 -(566 -(87 + 263)))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=181 -(67 + 113 + 0) ;local v45=(v20(v43,1 + 0 ,49 -29 ) * (2^(24 + 8))) + v42 ;local v46=v20(v43,21,123 -(883 -(368 + 423)) );local v47=((v20(v43,984 -(802 + 150) )==1) and  -(2 -1)) or ((3 -2) -0) ;if (v46==(0 + 0)) then if (v45==(997 -(915 + 82))) then return v47 * ((18 -(10 + 8)) -0) ;else v46=(3 -2) + 0 ;v44=0;end elseif (v46==(2691 -644)) then return ((v45==(1187 -(1069 + 118))) and (v47 * ((2 -1)/(0 -(442 -(416 + 26)))))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((1 + 1)^(92 -40)))) ;end local function v25(v48) local v49=0;local v50;local v51;while true do if (v49==(3 -(7 -5))) then v50=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;v49=3 -1 ;end if (v49==2) then v51={};for v89=439 -(145 + (1219 -926)) , #v50 do v51[v89]=v2(v1(v3(v50,v89,v89)));end v49=3;end if (v49==((1526 -1096) -(44 + 386))) then v50=nil;if  not v48 then local v95=1486 -(998 + 488) ;while true do if (v95==(0 + 0)) then v48=v23();if (v48==((859 -(814 + 45)) + (0 -0))) then return "";end break;end end end v49=773 -(201 + 571) ;end if (v49==(1141 -(69 + 47 + 1022))) then return v6(v51);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52==3) then v59=nil;while true do if (v53~=1) then else local v96=0 + 0 ;while true do if (v96==(0 -0)) then local v100=0 -0 ;while true do if (v100~=(1701 -(1419 + 281))) then else v96=1;break;end if (v100~=(0 -0)) then else v58=v23();v59={};v100=1;end end end if (v96==2) then v53=2;break;end if ((75 -(71 + 3))~=v96) then else for v102=1,v58 do local v103=0 + 0 ;local v104;local v105;local v106;local v107;while true do if (v103~=(2 -1)) then else v106=nil;v107=nil;v103=2;end if (v103~=(2 -0)) then else while true do if (v104==(241 -(187 + 54))) then local v198=0;while true do if (v198~=0) then else v105=0;v106=nil;v198=1;end if (v198==1) then v104=1;break;end end end if (v104==(781 -(162 + 618))) then v107=nil;while true do if (v105~=(1 + 0)) then else if (v106==1) then v107=v21()~=(0 + 0) ;elseif (v106==(3 -1)) then v107=v24();elseif (v106==(4 -1)) then v107=v25();end v59[v102]=v107;break;end if (v105==(0 + 0)) then local v363=1636 -(1373 + 263) ;while true do if (v363~=(1000 -(451 + 549))) then else v106=v21();v107=nil;v363=1 + 0 ;end if (v363==1) then v105=1 -0 ;break;end end end end break;end end break;end if (v103==(0 -0)) then v104=1384 -(746 + 638) ;v105=nil;v103=1 + 0 ;end end end v57[3]=v21();v96=2 -0 ;end end end if ((343 -(218 + 123))==v53) then local v97=1581 -(1535 + 46) ;while true do if ((0 + 0)~=v97) then else for v108=1,v23() do local v109=0;local v110;local v111;while true do if ((1 + 0)~=v109) then else while true do if (v110==0) then v111=v21();if (v20(v111,561 -(306 + 254) ,1 + 0 )==0) then local v337=0 -0 ;local v338;local v339;local v340;local v341;local v342;while true do if (v337~=1) then else v340=nil;v341=nil;v337=2;end if (2~=v337) then else v342=nil;while true do if (v338==(1469 -(899 + 568))) then while true do if (v339~=1) then else v342={v22(),v22(),nil,nil};if (v340==0) then local v420=603 -(268 + 335) ;local v421;local v422;while true do if (v420~=1) then else while true do if (0==v421) then v422=0;while true do if (v422==0) then v342[293 -(60 + 230) ]=v22();v342[4]=v22();break;end end break;end end break;end if (v420==(572 -(426 + 146))) then v421=0 + 0 ;v422=nil;v420=1;end end elseif (v340==(1457 -(282 + 1174))) then v342[814 -(569 + 242) ]=v23();elseif (v340==(5 -3)) then v342[1 + 2 ]=v23() -((1026 -(706 + 318))^16) ;elseif (v340==3) then local v432=1251 -(721 + 530) ;local v433;while true do if (v432~=(1271 -(945 + 326))) then else v433=0 -0 ;while true do if (v433~=(0 + 0)) then else v342[3]=v23() -(2^(716 -(271 + 429))) ;v342[4]=v22();break;end end break;end end end v339=2 + 0 ;end if (v339==3) then if (v20(v341,1503 -(1408 + 92) ,3)~=(1087 -(461 + 625))) then else v342[4]=v59[v342[4]];end v54[v108]=v342;break;end if (v339==2) then if (v20(v341,1289 -(993 + 295) ,1)==(1 + 0)) then v342[1173 -(418 + 753) ]=v59[v342[1 + 1 ]];end if (v20(v341,2,2)~=1) then else v342[1 + 2 ]=v59[v342[1 + 2 ]];end v339=1 + 2 ;end if (v339~=0) then else local v418=529 -(406 + 123) ;local v419;while true do if (v418==0) then v419=1769 -(1749 + 20) ;while true do if (v419==0) then local v431=0 + 0 ;while true do if (v431~=1) then else v419=1;break;end if (v431==(1322 -(1249 + 73))) then v340=v20(v111,1 + 1 ,3);v341=v20(v111,4,6);v431=1146 -(466 + 679) ;end end end if (v419==(2 -1)) then v339=2 -1 ;break;end end break;end end end end break;end if (v338==(1901 -(106 + 1794))) then local v412=0;while true do if (v412~=0) then else v341=nil;v342=nil;v412=1 + 0 ;end if (v412~=1) then else v338=2;break;end end end if (v338~=(0 + 0)) then else local v413=0 -0 ;while true do if ((0 -0)~=v413) then else v339=114 -(4 + 110) ;v340=nil;v413=1;end if (v413~=(585 -(57 + 527))) then else v338=1428 -(41 + 1386) ;break;end end end end break;end if (v337~=0) then else v338=0;v339=nil;v337=1;end end end break;end end break;end if (v109==(103 -(17 + 86))) then v110=0;v111=nil;v109=1;end end end for v112=1 + 0 ,v23() do v55[v112-1 ]=v28();end v97=1 -0 ;end if (1==v97) then return v57;end end end if (v53==0) then local v98=0 -0 ;local v99;while true do if (v98==0) then v99=0;while true do if (v99==(167 -(122 + 44))) then local v114=0 -0 ;while true do if (v114==1) then v99=6 -4 ;break;end if (v114==0) then v56={};v57={v54,v55,nil,v56};v114=1 + 0 ;end end end if ((3 -1)~=v99) then else v53=66 -(30 + 35) ;break;end if (v99==0) then local v115=0;while true do if (v115~=0) then else v54={};v55={};v115=1;end if (1==v115) then v99=1;break;end end end end break;end end end end break;end if (v52==2) then v57=nil;v58=nil;v52=3 + 0 ;end if (v52==1) then v55=nil;v56=nil;v52=2;end if (v52==0) then v53=0;v54=nil;v52=1258 -(1043 + 214) ;end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v84=0,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + 1 ];else v76[v84]=v73[v84 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=42) then if (v79<=20) then if (v79<=9) then if (v79<=4) then if (v79<=1) then if (v79==0) then local v116=v78[2];v76[v116](v76[v116 + 1 ]);else local v117=v78[3];local v118=v76[v117];for v181=v117 + 1 ,v78[4] do v118=v118   .. v76[v181] ;end v76[v78[2]]=v118;end elseif (v79<=2) then local v120=v78[2];local v121,v122=v69(v76[v120](v76[v120 + 1 ]));v71=(v122 + v120) -1 ;local v123=0;for v182=v120,v71 do local v183=0;while true do if (v183==0) then v123=v123 + 1 ;v76[v182]=v121[v123];break;end end end elseif (v79>3) then v76[v78[2]][v78[3]]=v76[v78[4]];else local v201=v67[v78[3]];local v202;local v203={};v202=v10({},{__index=function(v297,v298) local v299=v203[v298];return v299[1][v299[2]];end,__newindex=function(v300,v301,v302) local v303=v203[v301];v303[1][v303[2]]=v302;end});for v305=1,v78[4] do local v306=0;local v307;while true do if (v306==0) then v70=v70 + 1 ;v307=v66[v70];v306=1;end if (v306==1) then if (v307[1]==24) then v203[v305-1 ]={v76,v307[3]};else v203[v305-1 ]={v61,v307[3]};end v75[ #v75 + 1 ]=v203;break;end end end v76[v78[2]]=v29(v201,v202,v62);end elseif (v79<=6) then if (v79>5) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v124=v78[2];v76[v124](v13(v76,v124 + 1 ,v71));end elseif (v79<=7) then v76[v78[2]]={};elseif (v79==8) then v76[v78[2]]=v78[3]~=0 ;else local v207=v78[2];local v208=v76[v78[3]];v76[v207 + 1 ]=v208;v76[v207]=v208[v78[4]];end elseif (v79<=14) then if (v79<=11) then if (v79==10) then for v184=v78[2],v78[3] do v76[v184]=nil;end elseif  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=12) then v76[v78[2]]();elseif (v79>13) then local v213=v78[2];v76[v213]=v76[v213](v13(v76,v213 + 1 ,v78[3]));else local v215=v78[2];v76[v215]=v76[v215](v13(v76,v215 + 1 ,v71));end elseif (v79<=17) then if (v79<=15) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==16) then local v218=0;local v219;while true do if (v218==0) then v219=v78[2];do return v76[v219](v13(v76,v219 + 1 ,v78[3]));end break;end end elseif (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=18) then v76[v78[2]]=v76[v78[3]][v78[4]];elseif (v79>19) then local v220=v78[2];local v221={v76[v220](v76[v220 + 1 ])};local v222=0;for v308=v220,v78[4] do local v309=0;while true do if (v309==0) then v222=v222 + 1 ;v76[v308]=v221[v222];break;end end end else local v223=v78[2];local v224=v78[4];local v225=v223 + 2 ;local v226={v76[v223](v76[v223 + 1 ],v76[v225])};for v310=1,v224 do v76[v225 + v310 ]=v226[v310];end local v227=v226[1];if v227 then v76[v225]=v227;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79<=31) then if (v79<=25) then if (v79<=22) then if (v79>21) then local v128=0;local v129;local v130;while true do if (v128==0) then v129=v78[3];v130=v76[v129];v128=1;end if (v128==1) then for v348=v129 + 1 ,v78[4] do v130=v130   .. v76[v348] ;end v76[v78[2]]=v130;break;end end else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79<=23) then v76[v78[2]][v78[3]]=v78[4];elseif (v79>24) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=28) then if (v79<=26) then v76[v78[2]]=v61[v78[3]];elseif (v79>27) then v76[v78[2]]= #v76[v78[3]];else local v231=v78[2];v76[v231]=v76[v231](v13(v76,v231 + 1 ,v78[3]));end elseif (v79<=29) then v76[v78[2]][v76[v78[3]]]=v76[v78[4]];elseif (v79>30) then local v233=v78[2];local v234={v76[v233](v13(v76,v233 + 1 ,v71))};local v235=0;for v316=v233,v78[4] do v235=v235 + 1 ;v76[v316]=v234[v235];end else v70=v78[3];end elseif (v79<=36) then if (v79<=33) then if (v79==32) then local v139=0;local v140;while true do if (v139==0) then v140=v76[v78[4]];if  not v140 then v70=v70 + 1 ;else local v365=0;while true do if (v365==0) then v76[v78[2]]=v140;v70=v78[3];break;end end end break;end end else local v141=v78[2];v76[v141]=v76[v141](v76[v141 + 1 ]);end elseif (v79<=34) then v76[v78[2]]=v78[3];elseif (v79==35) then v76[v78[2]]=v62[v78[3]];else local v239=v78[2];v76[v239](v13(v76,v239 + 1 ,v78[3]));end elseif (v79<=39) then if (v79<=37) then local v145=v78[2];local v146={v76[v145](v76[v145 + 1 ])};local v147=0;for v186=v145,v78[4] do v147=v147 + 1 ;v76[v186]=v146[v147];end elseif (v79>38) then local v240=v78[2];local v241=v76[v78[3]];v76[v240 + 1 ]=v241;v76[v240]=v241[v78[4]];elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=40) then local v148=v78[2];v76[v148]=v76[v148](v76[v148 + 1 ]);elseif (v79>41) then v76[v78[2]]= #v76[v78[3]];else v76[v78[2]]=v76[v78[3]] + v78[4] ;end elseif (v79<=64) then if (v79<=53) then if (v79<=47) then if (v79<=44) then if (v79>43) then local v150=v78[2];local v151={v76[v150](v13(v76,v150 + 1 ,v71))};local v152=0;for v189=v150,v78[4] do v152=v152 + 1 ;v76[v189]=v151[v152];end else do return;end end elseif (v79<=45) then v76[v78[2]]={};elseif (v79==46) then local v247=v78[2];local v248,v249=v69(v76[v247](v13(v76,v247 + 1 ,v78[3])));v71=(v249 + v247) -1 ;local v250=0;for v320=v247,v71 do v250=v250 + 1 ;v76[v320]=v248[v250];end elseif (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=50) then if (v79<=48) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79==49) then v76[v78[2]]();else local v251=v78[2];v76[v251](v13(v76,v251 + 1 ,v71));end elseif (v79<=51) then do return;end elseif (v79==52) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79<=58) then if (v79<=55) then if (v79==54) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v156=v78[2];local v157={};for v192=1, #v75 do local v193=v75[v192];for v255=0, #v193 do local v256=v193[v255];local v257=v256[1];local v258=v256[2];if ((v257==v76) and (v258>=v156)) then v157[v258]=v257[v258];v256[1]=v157;end end end end elseif (v79<=56) then v76[v78[2]]=v62[v78[3]];elseif (v79==57) then local v259=v78[2];local v260=v78[4];local v261=v259 + 2 ;local v262={v76[v259](v76[v259 + 1 ],v76[v261])};for v323=1,v260 do v76[v261 + v323 ]=v262[v323];end local v263=v262[1];if v263 then local v356=0;while true do if (v356==0) then v76[v261]=v263;v70=v78[3];break;end end else v70=v70 + 1 ;end else local v264=v78[2];local v265,v266=v69(v76[v264](v13(v76,v264 + 1 ,v78[3])));v71=(v266 + v264) -1 ;local v267=0;for v326=v264,v71 do local v327=0;while true do if (v327==0) then v267=v267 + 1 ;v76[v326]=v265[v267];break;end end end end elseif (v79<=61) then if (v79<=59) then local v160=0;local v161;while true do if (v160==0) then v161=v78[2];do return v13(v76,v161,v71);end break;end end elseif (v79==60) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else local v269=0;local v270;local v271;local v272;while true do if (v269==1) then v272={};v271=v10({},{__index=function(v379,v380) local v381=0;local v382;while true do if (0==v381) then v382=v272[v380];return v382[1][v382[2]];end end end,__newindex=function(v383,v384,v385) local v386=0;local v387;while true do if (v386==0) then v387=v272[v384];v387[1][v387[2]]=v385;break;end end end});v269=2;end if (v269==2) then for v388=1,v78[4] do v70=v70 + 1 ;local v389=v66[v70];if (v389[1]==24) then v272[v388-1 ]={v76,v389[3]};else v272[v388-1 ]={v61,v389[3]};end v75[ #v75 + 1 ]=v272;end v76[v78[2]]=v29(v270,v271,v62);break;end if (v269==0) then v270=v67[v78[3]];v271=nil;v269=1;end end end elseif (v79<=62) then local v162=0;local v163;while true do if (0==v162) then v163=v78[2];v76[v163](v13(v76,v163 + 1 ,v78[3]));break;end end elseif (v79>63) then v76[v78[2]][v78[3]]=v78[4];else local v275=v78[2];v76[v275](v76[v275 + 1 ]);end elseif (v79<=75) then if (v79<=69) then if (v79<=66) then if (v79==65) then v76[v78[2]]=v61[v78[3]];else v76[v78[2]][v76[v78[3]]]=v76[v78[4]];end elseif (v79<=67) then local v168=v78[2];local v169=v76[v168];for v194=v168 + 1 ,v78[3] do v7(v169,v76[v194]);end elseif (v79>68) then for v330=v78[2],v78[3] do v76[v330]=nil;end else local v276=v78[2];local v277=v76[v276];local v278=v78[3];for v332=1,v278 do v277[v332]=v76[v276 + v332 ];end end elseif (v79<=72) then if (v79<=70) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==71) then local v280=0;local v281;while true do if (v280==0) then v281=v78[2];do return v13(v76,v281,v71);end break;end end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=73) then local v170=v78[2];v76[v170]=v76[v170](v13(v76,v170 + 1 ,v71));elseif (v79>74) then local v283=v78[2];do return v76[v283](v13(v76,v283 + 1 ,v78[3]));end else v70=v78[3];end elseif (v79<=80) then if (v79<=77) then if (v79==76) then local v172=v78[2];local v173,v174=v69(v76[v172](v76[v172 + 1 ]));v71=(v174 + v172) -1 ;local v175=0;for v195=v172,v71 do v175=v175 + 1 ;v76[v195]=v173[v175];end else local v176=0;local v177;while true do if (v176==0) then v177=v76[v78[4]];if  not v177 then v70=v70 + 1 ;else local v369=0;while true do if (v369==0) then v76[v78[2]]=v177;v70=v78[3];break;end end end break;end end end elseif (v79<=78) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>79) then v76[v78[2]]=v76[v78[3]];elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=83) then if (v79<=81) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>82) then v76[v78[2]]=v78[3];else local v291=0;local v292;local v293;local v294;while true do if (v291==1) then v294=v78[3];for v391=1,v294 do v293[v391]=v76[v292 + v391 ];end break;end if (v291==0) then v292=v78[2];v293=v76[v292];v291=1;end end end elseif (v79<=84) then local v178=0;local v179;local v180;while true do if (0==v178) then v179=v78[2];v180={};v178=1;end if (v178==1) then for v358=1, #v75 do local v359=0;local v360;while true do if (0==v359) then v360=v75[v358];for v405=0, #v360 do local v406=v360[v405];local v407=v406[1];local v408=v406[2];if ((v407==v76) and (v408>=v179)) then v180[v408]=v407[v408];v406[1]=v180;end end break;end end end break;end end elseif (v79>85) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]][v78[4]];end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);